* TODO!
** Sort out Meeting Minutes
*
* Import .hdf file to Vivado
** https://support.xilinx.com/s/question/0D52E00006lLh8KSAS/import-hdf-into-vivado?language=en_US
** To open a .hdf file in Vivado, you need to create a new project in Vivado and then select "Create Block Design" from the Flow Navigator. In the "Block Design" window, you can import the .hdf file using the "File" -> "Import" option. This will allow you to view the hardware design described in the .hdf file, including the FPGA or SoC, the processor, and any other components that are part of the design. Once the .hdf file is imported, you can make any necessary changes to the hardware design and save the changes to a new version of the .hdf file.
*
* To recompile the nvme-cli in Ubuntu if you installed it using apt install, you need to build it from source code. Here are the steps:
** Download the source code of nvme-cli from the official repository, e.g., https://github.com/linux-nvme/nvme-cli.
** Extract the downloaded source code.
** Change to the directory containing the source code using cd.
** Configure the build using ./configure. This step will check for dependencies and configure the build.
** Build the source code using make. This step will compile the source code.
** Install the compiled binary using sudo make install. This step will install the binary in the appropriate location.
** Finally, verify that the new version of nvme-cli has been installed by running nvme and checking the version.
** Note that the above steps are for building nvme-cli from source code on Ubuntu. The steps may differ for other operating systems.